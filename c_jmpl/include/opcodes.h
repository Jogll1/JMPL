// Use OPCODE() macro which will be defined as this list is in include
// http://en.wikipedia.org/wiki/X_Macro
//
// A 'b' tag means the opcode takes a byte as a parameter.
// A 'c' tag means the opcode takes a constant (short) as a parameter.
// c
OPCODE(CONSTANT)
OPCODE(NULL)
OPCODE(TRUE)
OPCODE(FALSE)
OPCODE(POP)
OPCODE(GET_LOCAL)
OPCODE(SET_LOCAL)
OPCODE(GET_GLOBAL)
// c
OPCODE(DEFINE_GLOBAL)
OPCODE(SET_GLOBAL)
// c 
OPCODE(GET_UPVALUE)
// c
OPCODE(SET_UPVALUE)
OPCODE(EQUAL)
OPCODE(NOT_EQUAL)
OPCODE(GREATER)
OPCODE(GREATER_EQUAL)
OPCODE(LESS)
OPCODE(LESS_EQUAL)
OPCODE(ADD)
OPCODE(SUBTRACT)
OPCODE(MULTIPLY)
OPCODE(MOD)
OPCODE(DIVIDE)
OPCODE(EXPONENT)
OPCODE(NOT)
OPCODE(NEGATE)
OPCODE(JUMP)
OPCODE(JUMP_IF_FALSE)
// Pops condition if false
OPCODE(JUMP_IF_FALSE_2)
OPCODE(LOOP)
// b
OPCODE(CALL)
OPCODE(CLOSURE)
OPCODE(CLOSE_UPVALUE)
// b
OPCODE(RETURN)
OPCODE(STASH)
OPCODE(SET_CREATE)
// b
OPCODE(SET_INSERT)
// b
OPCODE(SET_OMISSION)
OPCODE(SET_IN)
OPCODE(SET_INTERSECT)
OPCODE(SET_UNION)
OPCODE(SIZE)
OPCODE(SET_DIFFERENCE)
OPCODE(SUBSET)
OPCODE(SUBSETEQ)
// b
OPCODE(CREATE_TUPLE)
// b
OPCODE(TUPLE_OMISSION)
// b
OPCODE(SUBSCRIPT)
OPCODE(CREATE_ITERATOR)
OPCODE(ITERATE)
OPCODE(ARB)
// c
OPCODE(IMPORT_LIB)